==============================
How to Use 2-matrix_divided.py
==============================

This module  defines a function `matrix_divided(matrix, div)`

the function takes in a matrix and a value and devides all the values of that matrix by specified integer
and then returns the new matrix

=====================================

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test case 1 (all integer values):

	>>> matrix = [[1,2],[4,3]]
	>>> print(matrix_divided(matrix, 2))
	[[0.5, 1.0], [2.0, 1.5]]

Test case 2 (inclusive of floating point values values):

	>>> matrix = [[2.2, 4.4], [6.6, 8.8]]
	>>> print(matrix_divided(matrix, 2))
	[[1.1, 2.2], [3.3, 4.4]]

Test case 3 (zero division):

	>>> matrix = [[3,4], [5,6]]
	>>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

Test case 4 (non integer values):

	>>> matrix = [[2, "we"], [2,4]]
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case 5 (empty list):

	>>> matrix = []
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

test case 6 (uneven row size):

	>>> matrix = [[3], [3,4]]
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
        TypeError: Each row of the matrix must have the same size
